options:
  logging: CLOUD_LOGGING_ONLY

steps:
# Step 1: Build the Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/clinical-assistant-429217/clinical-assistant/clinical-assistant-app:latest', '.']

# Step 2: Push the Docker image to Google Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/clinical-assistant-429217/clinical-assistant/clinical-assistant-app:latest']

# Step 3: Apply the Cloud Deploy pipeline configuration for Clinical Assistant app
- name: 'gcr.io/cloud-builders/gcloud'
  args:
    - 'deploy'
    - 'apply'
    - '--file=deploy/pipeline.yaml'
    - '--region=us-central1'
    - '--project=clinical-assistant-429217'

# Step 4: Apply the Cloud Deploy target configuration for Clinical Assistant app
- name: 'gcr.io/cloud-builders/gcloud'
  args:
    - 'deploy'
    - 'apply'
    - '--file=deploy/targets.yaml'
    - '--region=us-central1'
    - '--project=clinical-assistant-429217'



# Step 5: Get credentials for the GKE cluster
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      sudo apt-get update
      sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin
      gcloud container clusters get-credentials autopilot-ca --region us-central1 --project clinical-assistant-429217
      kubectl config view
      kubectl get nodes

# Step 6: Apply the Kubernetes configuration for the Clinical Assistant app
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'kubernetes/clinical-assistant-app.yaml']
  env:
    - 'CLOUDSDK_CORE_PROJECT=clinical-assistant-429217'

# Step 7: Apply the static Ingress configuration
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'kubernetes/ingress.yaml']
  env:
    - 'CLOUDSDK_CORE_PROJECT=clinical-assistant-429217'

# Step 8: Trigger Cloud Deploy for the new release
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      gcloud deploy releases create clinical-assistant-release-$(date +%Y%m%d-%H%M%S) \
      --project=clinical-assistant-429217 \
      --region=us-central1 \
      --delivery-pipeline=fastapi-pipeline \
      --images=clinical-assistant-container=us-central1-docker.pkg.dev/clinical-assistant-429217/clinical-assistant/clinical-assistant-app:latest \
      --annotations=commit-sha=$(git rev-parse HEAD) \
      --skaffold-file=skaffold.yaml

images:
- 'us-central1-docker.pkg.dev/clinical-assistant-429217/clinical-assistant/clinical-assistant-app:latest'

timeout: '1200s'  # Set a timeout for the build process
